package io.github.acciochris;

import java.awt.Color;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import org.dyn4j.geometry.*;

/**
 * Main entrypoint for the RoThro game.
 * 
 * @author Chris Liu
 * @author Anvesh Pattaje
 * @version May 30, 2025
 */
public class Main {
    /**
     * Definitions of the available levels. Generated by methods below.
     */
    public static final Level[] LEVELS = {
        level0(),
        level1(),
        level2(),
    };

    /**
     * Create level 0.
     * 
     * @return level 0 definition
     */
    public static Level level0()
    {
        Level level = new Level();
        level.setLevelNum(0);

        // Ball & Hole Settings for level0:
        level.setBallRadius(1.5);
        level.setBallPos(new Vector2(-12, -3));
        level.setHole(new Hole(8.0, level.getBallRadius() * 2 + 1.0));

        // Initialization of obstacle storage lists
        LinkedList<Obstacle> statyRectObs = new LinkedList<Obstacle>(); // staty = stationary
        LinkedList<Obstacle> statyCircleObs = new LinkedList<Obstacle>();
        LinkedList<Obstacle> capsuleObs = new LinkedList<Obstacle>();
        LinkedList<Obstacle> rectObs = new LinkedList<Obstacle>();

        // Creation and addition of rectangle Obstacles
        Obstacle rect1 = new Obstacle(new Rectangle(4.0, 1.0), 5.0, 0.0, false, 0);
        Obstacle rect2 = new Obstacle(new Rectangle(3.5, 4.0), -2.0, 5.0, new Color(90, 40, 180), true, "Prismatic", "FIXANG", 0);
        statyRectObs.add(rect1);
        rectObs.add(rect2);

        // Creation and addition of circle Obstacles
        Obstacle circle1 = new Obstacle(new Circle(2.75), 10.0, 6.0, false, 0);
        Obstacle circle2 = new Obstacle(new Circle(3), 9.0, -6.0, false, 0);
        statyCircleObs.add(circle1);
        statyCircleObs.add(circle2);
    
        // Creation and addition of capsule Obstacles
        Obstacle capsule1 = new Obstacle(new Capsule(6.0, 1.5), -9.0, 8.0, new Color(0xBD93F9), true, "Revolute", "NORM", 0);
        Obstacle capsule2 = new Obstacle(new Capsule(6.0, 1.5), -9.0, -8.0, new Color(30, 140, 90), true, "Revolute", "NORM", 0);
        capsuleObs.add(capsule1);
        capsuleObs.add(capsule2);

        // Creation of the joints list & addition of Obstacle lists
        ArrayList<Integer> joints = new ArrayList<Integer>();
        joints.add(2);
        joints.add(3);
        level.setJoints(joints);
        level.addObstacle(statyRectObs);
        level.addObstacle(statyCircleObs);
        level.addObstacle(rectObs);
        level.addObstacle(capsuleObs);

        return level;
    }

    /**
     * Create level 1.
     * 
     * @return level 1 definition
     */
    public static Level level1()
    {
        Level level = new Level();
        level.setLevelNum(1);
        level.setBallPos(new Vector2(-17, 0));
        level.setBallRadius(1.0);
        level.setHole(new Hole(5.0, level.getBallRadius() * 2 + 0.5));

        // Initialization of obstacle storage lists
        LinkedList<Obstacle> statyRectObs = new LinkedList<Obstacle>();
        LinkedList<Obstacle> statyCircleObs = new LinkedList<Obstacle>();
        LinkedList<Obstacle> circleObs = new LinkedList<Obstacle>();
        LinkedList<Obstacle> capsuleObs = new LinkedList<Obstacle>();
        LinkedList<Obstacle> rectObs = new LinkedList<Obstacle>();
        LinkedList<Obstacle> triObs = new LinkedList<Obstacle>();

        // Creation and addition of rectangle Obstacles
        Obstacle rect1 = new Obstacle(new Rectangle(2, 7.5), -12.0, 0.0, new Color(90, 80, 170), true, "Revolute", "NORM", 1);
        Obstacle rect2 = new Obstacle(new Rectangle(5, 3.0), -3.25, -9.0, new Color(90, 80, 170), false, "", "", 1);
        rectObs.add(rect1);
        statyRectObs.add(rect2);
        // statyRectObs.add(rect2);
        // statyRectObs.add(rect2);
        // statyRectObs.add(rect2);

        // Creation and addition of circle Obstacles
        Obstacle circle1 = new Obstacle(new Circle(1), -1.0, 1.0, new Color(230, 120, 255), true, "Pendulum", "NORM",1);
        circleObs.add(circle1);
    
        // Creation and addition of capsule Obstacles

        // Creation and addition of triangle Obstacles
        Vector2 triLocalVert1 = new Vector2(2.0, -2.0);
        Vector2 triLocalVert2 = new Vector2(0, 2.0);
        Vector2 triLocalVert3 = new Vector2(-2.0, -2.0);
        Obstacle tri1 = new Obstacle(new Triangle(triLocalVert1, triLocalVert2, triLocalVert3), 6.0, 3.0, new Color(60, 230, 190), true, "Revolute", "NORM", 1);
        Obstacle tri2 = new Obstacle(new Triangle(triLocalVert1, triLocalVert2, triLocalVert3), -7.0, 3.0, new Color(60, 230, 190), true, "Revolute", "NORM", 1);
        triObs.add(tri1);
        triObs.add(tri2);

        // Creation and addition of Polygon Obstacles

        // Creation of the joints list & addition of Obstacle lists
        ArrayList<Integer> joints = new ArrayList<Integer>();
        joints.add(2);
        joints.add(4);
        joints.add(5);
        level.setJoints(joints);
        level.addObstacle(statyRectObs);
        level.addObstacle(statyCircleObs);
        level.addObstacle(rectObs);
        level.addObstacle(capsuleObs);
        level.addObstacle(triObs);
        level.addObstacle(circleObs);

        return level;
    }

    /**
     * Create level 2.
     * 
     * @return level 2 definition
     */
    public static Level level2()
    {
        Level level = new Level();
        level.setLevelNum(2);
        level.setBallRadius(0.5);
        level.setBallPos(new Vector2(-3, -9));
        level.setHole(new Hole(8.0, level.getBallRadius() * 2 + 0.1));

        // Initialization of obstacle storage lists
        LinkedList<Obstacle> statyRectObs = new LinkedList<Obstacle>();
        LinkedList<Obstacle> statyCircleObs = new LinkedList<Obstacle>();
        LinkedList<Obstacle> capsuleObs = new LinkedList<Obstacle>();
        LinkedList<Obstacle> rectObs = new LinkedList<Obstacle>();
        LinkedList<Obstacle> triObs = new LinkedList<Obstacle>();
        LinkedList<Obstacle> polygonObs = new LinkedList<Obstacle>();

        // Creation and addition of rectangle Obstacles
        Obstacle rect1 = new Obstacle(new Rectangle(2, 7.5), -12.0, 0.0, new Color(90, 80, 170), false, "", "", 2);
        statyCircleObs.add(rect1);

        // Creation and addition of circle Obstacles
    
        // Creation and addition of capsule Obstacles

        // Creation and addition of Polygon Obstacles

        // Creation and addition of Triangle Obstacles

        // Creation of the joints list & addition of Obstacle lists
        ArrayList<Integer> joints = new ArrayList<Integer>();
        level.setJoints(joints);
        level.addObstacle(statyRectObs);
        level.addObstacle(statyCircleObs);
        level.addObstacle(rectObs);
        level.addObstacle(capsuleObs);
        level.addObstacle(triObs);
        level.addObstacle(polygonObs);

        for (List<Obstacle> obstacleList : level.getObstacles())
        {
            for (Obstacle obstacle : obstacleList)
            {
                obstacle.setVisible(false);
            }
        }

        return level;
    }


    /**
     * Main command line entrypoint.
     * 
     * @param args command line arguments, unused
     */
    public static void main(String[] args) {
        for (Level level : LEVELS)
        {
            RoThro rothro = new RoThro(level);
            rothro.run();
        }
    }
}
